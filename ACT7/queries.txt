miembro(Elem,Lista):Verifica si un elemento Elem pertenece a la lista Lista.

nel(Lista, N):Calcula el número de elementos en la lista Lista y lo almacena en N.

es_lista(Lista):Comprueba si un término dado es una lista.

concatena(L1, L2, L3):Concatena dos listas L1 y L2, dando como resultado una nueva lista L3.

ultimo(Elem, Lista):Encuentra el último elemento Elem en la lista Lista.

inversa(Lista, Inver):Calcula la inversa de una lista Lista y la almacena en Inver.

borrar(Elem, L1, L2):Borra un elemento Elem de la lista L1, generando una nueva lista L2.

subconjunto(L1, L2):Comprueba si L1 es un subconjunto de L2.

insertar(E, L1, L2):Inserta un elemento E en la lista L1, obteniendo una nueva lista L2.

permutacion(L1, L2):Verifica si L2 es una permutación de L1.

sust(E1, E2, L1, L2):Sustituye todas las ocurrencias del elemento E1 por E2 en la lista L1, generando L2.

union(L1, L2, L3):Calcula la unión de dos listas L1 y L2, almacenando el resultado en L3.

miembro(Elem, Lista, Pos):Similar a miembro/2, pero también devuelve la posición del elemento en la lista.

borrarN(Pos, L1, L2):Borra el elemento en la posición Pos de la lista L1, generando L2.
-----------------------------------------
miembro/2:
Consulta para verificar si 'd' es miembro de la lista [a, b, c, d, e]:
miembro(d, [a, b, c, d, e]).

nel/2:
Consulta para contar el número de elementos en la lista [a, b, [c, d], e]:
nel([a, b, [c, d], e], N).

es_lista/1:
Consulta para verificar si [a, b, [c, d], e] es una lista:
es_lista([a, b, [c, d], e]).

concatena/3:
Consulta para concatenar [a, b, c] y [d, e] y obtener una nueva lista:
concatena([a, b, c], [d, e], L).

ultimo/2:
Consulta para encontrar el último elemento de la lista [a, b, c, d, e]:
ultimo(X, [a, b, c, d, e]).

inversa/2:
Consulta para obtener la inversa de la lista [1, 2, 3]:
inversa([1, 2, 3], L).

borrar/3:
Consulta para eliminar el elemento 'b' de la lista [a, b, c]:
borrar(b, [a, b, c], L).

subconjunto/2:
Consulta para verificar si [a, b] es un subconjunto de [a, b, c, d]:
subconjunto([a, b], [a, b, c, d]).

insertar/3:
Consulta para insertar 'z' en la lista [a, b, c] y obtener una nueva lista:
insertar(z, [a, b, c], L).

permutacion/2:
Consulta para verificar si [1, 2, 3] es una permutación de [3, 2, 1]:
permutacion([1, 2, 3], [3, 2, 1])

sust/4:
Consulta para sustituir todas las ocurrencias de 'a' por 'x' en la lista [a, b, a, c, a]:
sust(a, x, [a, b, a, c, a], L).

union/3:
Consulta para realizar la unión de las listas [a, b, c] y [c, d, e]:
union([a, b, c], [c, d, e], L).

miembro/3:
Consulta para encontrar la posición de 'c' en la lista [a, b, c, d, e]:
miembro(c, [a, b, c, d, e], Pos).

borrarN/3:
Consulta para eliminar el elemento en la posición 3 de la lista [a, b, c, d, e]:
borrarN(3, [a, b, c, d, e], L).